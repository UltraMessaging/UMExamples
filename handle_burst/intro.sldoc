<a href="../../index.html" class="button" target="_top">Example index</a>
    <h1>Handling Burst Loss / Determining Size of Burst</h1>
    <p>Burst loss is an Ultra Messaging concept that deals with large amount of message fragments that have been detected as loss
        on a given transport. Typically in a UM application, when a single message fragment is detected loss and not recovered within
        the configured transport timeout window, that message fragment is declared unrecoverable loss. In the event of a very large fragment
        gap, the loss could be declared unrecoverable much sooner if the size of the gap exceeds the threshold configured by the receiver
        attribute =semlit,tooltip,../../tooltips/receiver_delivery_control_maximum_burst_loss.txt,delivery_control_maximum_burst_loss= - default
        is 512 message fragments.</p>
    <p>The key thing about burst loss is that the size of the burst is not necessarily equal to that of the configured threshold, in fact the burst
        is very likely much larger than the threshold. The threshold acts more as a maximum threshold in which the receiver is willing to accept
        before giving up. The event itself does not provide the size of the burst though, it is the applications responsibility to capture that data
        if it is necessary, and that is the purpose of this sample application, to demonstrate how to calculate the size of the burst.</p>
    <p>Calculating the size of the burst is quite easy. The burst event callback does provide a sequence number which is the high sequence number
        of the burst. If the application simply tracks the previously consumed sequence number, it can subtract that from the sequence number in the
        burst event to know exactly how many message fragments are included in the burst. To successfully track the last sequence number, the
        application will simply need to record the last sequence number received in the message callback, unrecoverable loss callback, and the
        burst callback itself, as these are the only three callbacks that will advance the sequence number.</p>
    <p>Note: As always, sequence numbers are assigned to message fragments, which may or may not be equal to one whole application message. If an
        application level message exceeds the configurable UM datagram size, than a single message may take up multiple message fragments, which
        would span over multiple sequence numbers.</p>
