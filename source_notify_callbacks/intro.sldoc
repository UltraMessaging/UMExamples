<a href="../../index.html" class="button" target="_top">Example index</a>
    <h1>Receiver Source Notification Callbacks (Create and Delete)</h1>
    <p>This example demonstrates how to configure and code the callbacks for when a receiver creates and deletes a 
       delivery controller for a specific source. This is typically done in support of maintaining per-source
       state information.</p>
    <p>Like many other callback function in UM, the source notification is configured via a receiver attribute, 
       =semlit,tooltip,../../tooltips/receiver_source_notification_function.txt,source_notification_function=which
       must be set programatically so that the appropriate function pointers can be provided.</p>
    <p>Inside the UM library, there is a concept of a <b>transport</b> and a <b>delivery controller</b>. It is important
       to understand the difference and characteristics of each and how it related to your application. A <b>transport</b>
       is the network connection that is used as the medium for publishing/subscribing to messages. For example, LBTRM
       (reliable multicast) is a transport which publishes on a specific multicast group and port. A transport may contain
       a single UM topic, or it could contain many UM topics; it depends on how a publishing application configures itself
       and its sources.</p>
    <p>A <b>delivery controller</b> is the internal mechanism that takes messages from a transport for a specific topic
       and then delivers those messages to the receiver application, given that the application has a receiver that is
       interested in that topic.</p>
    <p>When a new transport is detected by a UM receiver application, you may notice that the receiver application executes
       the Beginning of Session (BOS) callback. This is great information for the application to log because it can be used
       to help debug networking issues. However, this callback is not great at telling the application that a specific topic 
       ready to start receiving messages. Instead, the application can use the source_notification_callback which is
       demonstrated in this sample application. The source_notification_callback can enable a user callback to be executed
       when delivery controller is created for a topic and a separate callback for when a delivery controller is deleted.</p> 
